# ci.yml

name: CI

# 1) When to run: on pushes and pull requests to the main branch
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# 2) Define one “job” that runs on GitHub’s Ubuntu servers
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      # 2a) Start a PostgreSQL database for the backend tests
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123qwe
          POSTGRES_DB: usermgmt
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/usermgmt
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123qwe

    steps:
      # 2a) Get your code from GitHub
      - name: Checkout code
        uses: actions/checkout@v3

      # 2b) Set up Java so we can build the backend
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 2c) Build and test your Spring Boot backend
      - name: Build & test backend
        working-directory: backend
        run: mvn clean verify

      # 2d) Set up Node.js so we can build the frontend
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 2e) Install, lint, test, and build the React frontend
      - name: Build & test frontend
        working-directory: frontend
        run: |
          npm ci
          npm test -- --watchAll=false --ci
          npm run build
